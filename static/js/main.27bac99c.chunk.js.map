{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","types/Filter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["actions","todo","type","payload","removeTodo","currentTodoReducer","state","arguments","length","undefined","action","query","status","resetQuery","filterReducer","todos","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","Filter","TodoList","dispatch","filteredTodos","useMemo","preparedTodos","ALL","ACTIVE","completed","COMPLETED","trim","title","toLowerCase","includes","_jsxs","className","children","_jsx","map","id","classNames","onClick","currentTodoActions","handleSelect","TodoFilter","onSubmit","event","preventDefault","value","onChange","filterActions","target","placeholder","style","pointerEvents","Loader","get","url","fullURL","delay","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","isLoading","setIsLoading","useState","user","setUser","useEffect","userId","concat","finally","handleClose","href","email","name","App","newTodos","todosActions","_Fragment","Root","Provider","Router","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27bac99c.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\n// we use string literal as a type to avoid mistype in future\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\n// payload is a typical name for an action data\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\n// Action creator return type protect us from a mistype\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\n// These actions will be used in the application\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    // Implement all actions here\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","type FilterQueryAction = { type: 'filter/SET_QUERY', payload: string };\ntype FilterStatusAction = { type: 'filter/SET_STATUS', payload: string };\ntype FilterResetAction = { type: 'filter/RESET_QUERY' };\n\nconst setFilterQuery = (query: string): FilterQueryAction => ({\n  type: 'filter/SET_QUERY',\n  payload: query,\n});\nconst setFilterStatus = (status: string): FilterStatusAction => ({\n  type: 'filter/SET_STATUS',\n  payload: status,\n});\nconst resetQuery = (): FilterResetAction => ({\n  type: 'filter/RESET_QUERY',\n});\n\nexport const actions = { setFilterQuery, setFilterStatus, resetQuery };\n\ntype FilterState = {\n  query: string,\n  status: string,\n};\n\ntype Action = FilterQueryAction | FilterStatusAction | FilterResetAction;\n\nconst filterReducer = (\n  state: FilterState = { query: '', status: 'all' },\n  action: Action,\n): FilterState => {\n  switch (action.type) {\n    case 'filter/SET_QUERY':\n      return { ...state, query: action.payload };\n\n    case 'filter/SET_STATUS':\n      return { ...state, status: action.payload };\n\n    case 'filter/RESET_QUERY':\n      return { ...state, query: '' };\n\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetTodosAction = { type: 'todos/SET', payload: Todo[] };\n\nconst setTodos = (todos: Todo[]): SetTodosAction => ({\n  type: 'todos/SET',\n  payload: todos,\n});\n\nexport const actions = { setTodos };\n\ntype TodosState = Todo[];\ntype TodosAction = SetTodosAction;\n\nconst todosReducer = (\n  state: TodosState = [],\n  action: TodosAction,\n): TodosState => {\n  switch (action.type) {\n    case 'todos/SET':\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","export enum Filter {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React, { useMemo } from 'react';\nimport classNames from 'classnames';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\nimport { Todo } from '../../types/Todo';\nimport { Filter } from '../../types/Filter';\n\nexport const TodoList: React.FC = () => {\n  const todos = useAppSelector(status => status.todos);\n  const filter = useAppSelector((status) => status.filter);\n  const currentTodo = useAppSelector(status => status.currentTodo);\n  const { query, status } = filter;\n  const dispatch = useAppDispatch();\n\n  const handleSelect = (todo: Todo | null) => {\n    if (todo) {\n      dispatch(currentTodoActions.setTodo(todo));\n    }\n  };\n\n  const filteredTodos: Todo[] = useMemo(() => {\n    let preparedTodos = [...todos];\n\n    if (status) {\n      preparedTodos = preparedTodos.filter((todo) => {\n        switch (status) {\n          case Filter.ALL:\n            return todo;\n\n          case Filter.ACTIVE:\n            return !todo.completed;\n\n          case Filter.COMPLETED:\n            return todo.completed;\n\n          default:\n            return todo;\n        }\n      });\n    }\n\n    if (query.trim()) {\n      preparedTodos = preparedTodos.filter((todo) => todo.title.toLowerCase()\n        .includes(query.toLowerCase()));\n    }\n\n    return preparedTodos;\n  }, [todos, filter, query]);\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {filteredTodos.map(todo => {\n          const { id, title, completed } = todo;\n\n          return (\n            <tr data-cy=\"todo\" className=\"\" key={id}>\n              <td className=\"is-vcentered\">{id}</td>\n              {completed ? (\n                <td className=\"is-vcentered\">\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </td>\n              ) : (\n                <td className=\"is-vcentered\" />\n              )}\n\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={classNames(\n                    { 'has-text-success': completed },\n                    { 'has-text-danger': !completed },\n                  )}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => handleSelect(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames(\n                      'far',\n                      { 'fa-eye': currentTodo !== todo },\n                      { 'fa-eye-slash': currentTodo === todo },\n                    )}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as filterActions } from '../../features/filter';\n\nexport const TodoFilter: React.FC = () => {\n  const filter = useAppSelector(status => status.filter);\n  const { query, status } = filter;\n  const dispatch = useAppDispatch();\n\n  function handleQueryChange(event: React.ChangeEvent<HTMLInputElement>) {\n    dispatch(filterActions.setFilterQuery(event.target.value));\n  }\n\n  function handleStatusChange(event: React.ChangeEvent<HTMLSelectElement>) {\n    dispatch(filterActions.setFilterStatus(event.target.value));\n  }\n\n  function handleReset() {\n    dispatch(filterActions.resetQuery());\n  }\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n  };\n\n  return (\n    <form className=\"field has-addons\" onSubmit={handleSubmit}>\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={handleStatusChange}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQueryChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          {query && (\n            <button\n              data-cy=\"clearSearchButton\"\n              aria-label=\"button\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleReset}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\n\nexport const TodoModal: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [user, setUser] = useState<User | null>(null);\n  const currentTodo = useAppSelector(status => status.currentTodo);\n  const dispatch = useAppDispatch();\n\n  const handleClose = () => {\n    dispatch(currentTodoActions.removeTodo());\n  };\n\n  useEffect(() => {\n    if (currentTodo) {\n      getUser(currentTodo.userId)\n        .then(setUser)\n        .finally(() => {\n          setIsLoading(false);\n        });\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${currentTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {currentTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {currentTodo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { actions as todosActions } from './features/todos';\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const todos = useAppSelector(status => status.todos);\n  const currentTodo = useAppSelector(status => status.currentTodo);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getTodos()\n      .then((newTodos) => dispatch(todosActions.setTodos(newTodos)))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n\n              {!isLoading && todos.length > 0 && (\n                <TodoList />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && (\n        <TodoModal />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}